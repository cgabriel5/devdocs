// Generate font size.
@mixin fsize($size, $unit: "px") {
	// $sizes: 7 9 10 11 12 13 14 15 16 18 20;
	font-size: unquote($size + $unit);
}

@mixin underline($val: underline) {
	text-decoration: $val;
}

@mixin c($val, $specificity: null) {
	@if $specificity {
		color: $val unquote($specificity);
	} @else {
		color: $val;
	}
}

@mixin bg($val) {
	background: $val;
}

// Useful when needing to make iOS elements clickable.
@mixin cur($val: pointer) {
	cursor: $val;
}

@mixin flex($dis: flex, $flow: "row nowrap", $justify: null, $align: null, $grow: null, $shrink: null, $flex: null, $aligns: null, $basis: null) {
	@if $dis {
		display: unquote($dis);
	}
	@if $flow {
		flex-flow: unquote($flow);
	}
	@if $justify {
		justify-content: unquote($justify);
	}
	@if $align {
		align-items: unquote($align);
	}
	@if $grow {
		flex-grow: unquote($grow);
	}
	@if $shrink {
		flex-shrink: unquote($shrink);
	}
	@if $flex {
		flex: unquote($flex);
	}
	@if $aligns {
		align-self: unquote($aligns);
	}
	@if $basis {
		flex-basis: unquote($basis);
	}
}

// Default font.
@mixin def-font {
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial,
		sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

// Make scrolling smooth in iOS.
@mixin ios-smooth-scrolling {
	overflow-scrolling: touch;
}

@mixin noselect {
	user-select: none;
	touch-callout: none;
}

@mixin translate3d($tx: 0, $ty: 0, $tz: 0, $specificity: null) {
	// CSS acceleration: [https://stackoverflow.com/a/18529444]
	// Specificity: [https://stackoverflow.com/a/33319903]
	transform: translate3d($tx, $ty, $tz) $specificity;
}

// Default UL styles.
@mixin def-ul {
	margin: 0;
	padding: 0;

	list-style: none;
}

@mixin truncate {
	overflow: hidden;

	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin slide-transform {
	// Use on the topbar, markdown elements if sliding them to the right
	// when the sidebar gets slid into view.
	transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
}

// Create an animation:
@mixin animation($name: null, $meta: null, $frames: null, $media: null) {
	// Animation resources: [https://www.w3schools.com/cssref/css3_pr_animation.asp]
	// @content: [http://krasimirtsonev.com/blog/article/SASS-content-directive-is-a-wonderful-thing]
	// @content: [https://robots.thoughtbot.com/sasss-content-directive]
	// maps: [https://www.phase2technology.com/blog/exploring-maps-sass-33-part-1]
	// maps: [https://css-tricks.com/snippets/sass/deep-getset-maps/]
	// maps: [https://www.viget.com/articles/sass-maps-are-awesome/]
	// maps: [https://www.sitepoint.com/using-sass-maps/]
	// maps: [https://webdesign.tutsplus.com/tutorials/an-introduction-to-sass-maps-usage-and-examples--cms-22184]
	// maps: [https://frontstuff.io/generate-all-your-utility-classes-with-sass-maps]
	// functions: [http://thesassway.com/advanced/pure-sass-functions]

	@if $name {
		$name: unquote($name);

		// Create the animation class with its properties.
		// [https://css-tricks.com/snippets/css/keyframe-animation-syntax/#article-header-id-2]
		@if $meta {
			.#{$name} {
				// Add the name by default.
				animation-name: #{$name};
				@each $key, $value in $meta {
					animation-#{$key}: $value;
				}
			}
		}

		// Create any keyframes.
		@if $frames {
			@keyframes #{$name} {
				// Loop over each frame map.
				@each $percent, $properties_map in $frames {
					#{$percent}% {
						// Loop over each property.
						@each $prop, $value in $properties_map {
							#{$prop}: $value;
						}
					}
				}
			}
		}

		// Create any media keyframes.
		@if $media {
			// Loop over each media query.
			@each $query, $frames in $media {
				// Media query syntax.
				@media (#{$query}) {
					// Set the keyframe syntax.
					@keyframes #{$name} {
						// Loop over the frames.
						@each $percent, $properties_map in $frames {
							// Set the frame syntax.
							#{$percent}% {
								// Loop over each property.
								@each $prop, $value in $properties_map {
									#{$prop}: $value;
								}
							}
						}
					}
				}
			}
		}
	}
}
